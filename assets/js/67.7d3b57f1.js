(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{534:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"现代cmake学习-命令行及cmakelists-txt写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#现代cmake学习-命令行及cmakelists-txt写法"}},[t._v("#")]),t._v(" 现代CMake学习：命令行及CMakeLists.txt写法")]),t._v(" "),s("h2",{attrs:{id:"命令行调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令行调用"}},[t._v("#")]),t._v(" 命令行调用")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 古代CMake")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p build\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" build\ncmake "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" -DCMAKE_BUILD_TYPE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Release\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" -j4\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 现代CMake")]),t._v("\ncmake -Bbuild -DCMAKE_BUILD_TYPE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Release\ncmake --build build --parallel "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\ncmake --build build --target "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])])]),t._v(" "),s("ul",[s("li",[t._v("现代CMake中不必手动创建"),s("code",[t._v("build")]),t._v("文件夹")]),t._v(" "),s("li",[s("code",[t._v("cmake --build build")]),t._v("命令增强了通用性，无需关心不同平台的编译方法")])]),t._v(" "),s("h3",{attrs:{id:"命令行中常用的选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令行中常用的选项"}},[t._v("#")]),t._v(" 命令行中常用的选项")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("-B")]),t._v("选项")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("-Bbuild")]),t._v(" 直接创建目录 "),s("code",[t._v("build")]),t._v(" 并生成 "),s("code",[t._v("bulid/Makefile")]),t._v(" 。")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("-D")]),t._v("选项")])]),t._v(" "),s("blockquote",[s("p",[t._v("指定配置变量（缓存变量），例如使用 "),s("code",[t._v("-DCMAKE_BUILD_TYPE=Release")]),t._v(" 会设置变量 "),s("code",[t._v("CMAKE_BUILD_TYPE")]),t._v(" 为 Release，该变量会保存在 "),s("code",[t._v("build/CMakeCache.txt")]),t._v(" 中。")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("-G")]),t._v("选项")])]),t._v(" "),s("blockquote",[s("p",[t._v("指定生成器，支持的生成器可以通过 "),s("code",[t._v("cmake -G")]),t._v(" 命令来查看")])]),t._v(" "),s("ul",[s("li",[t._v("Linux 系统默认用的是 Unix Makefiles；")]),t._v(" "),s("li",[t._v("Windows 系统默认用的是 Visual Studio；")]),t._v(" "),s("li",[t._v("MacOS 系统默认用的是 Xcode。")])]),t._v(" "),s("h2",{attrs:{id:"cmakelists-txt写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmakelists-txt写法"}},[t._v("#")]),t._v(" "),s("code",[t._v("CMakeLists.txt")]),t._v("写法")]),t._v(" "),s("p",[t._v("古代引用第三方库的写法比较繁琐，不在此列举，仅说明现代"),s("code",[t._v("CMakeLists.txt")]),t._v("的具体写法：\n在现代CMake中引用第三方库，在我们链接了之后，该库会自动携带其头文件目录等传播给自己的项目，无需手动添加："),s("strong",[t._v("只需要一个链接")]),t._v("即可。")]),t._v(" "),s("div",{staticClass:"language-Cmake extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cmake"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cmake_minimum_required")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("project")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyProject LANGUAGES CXX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("find_package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TBB COMPONENTS tbb tbbmalloc REQUIRED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myapp myapp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myapp "),s("span",{pre:!0,attrs:{class:"token inserted class-name"}},[t._v("TBB::tbb")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token inserted class-name"}},[t._v("TBB::tbbmalloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);