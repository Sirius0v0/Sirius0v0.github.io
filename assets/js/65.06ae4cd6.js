(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{531:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"cmake学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmake学习"}},[s._v("#")]),s._v(" CMake学习")]),s._v(" "),a("blockquote",[a("p",[s._v("主要参考"),a("a",{attrs:{href:"https://www.bookstack.cn/read/CMake-Cookbook/README.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("CMake菜谱"),a("OutboundLink")],1),s._v("教程总结的学习笔记，仅供笔者参考，完整教程请移步"),a("a",{attrs:{href:"https://www.bookstack.cn/read/CMake-Cookbook/README.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("CMake菜谱"),a("OutboundLink")],1),s._v(" 😃")])]),s._v(" "),a("h2",{attrs:{id:"从可执行文件到库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从可执行文件到库"}},[s._v("#")]),s._v(" 从可执行文件到库")]),s._v(" "),a("h3",{attrs:{id:"编译单个文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译单个文件"}},[s._v("#")]),s._v(" 编译单个文件")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置CMake所需的最低版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cmake_minimum_required")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("VERSION")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明项目的名称和支持的编程语言(CXX代表C++)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello_cmake_world LANGUAGES CXX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将源代码添加到此项目的可执行文件。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_executable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello-cmake "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello_cmake_world.cpp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("该文件与源文件"),a("code",[s._v("hello_cmake_world.cpp")]),s._v("放在一起，执行")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p build\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" build\ncmake "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\ncmake --build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("blockquote",[a("p",[a("strong",[s._v("注意：")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("CMake语言不区分大小写，但是参数是区分大小写的")])]),s._v(" "),a("li",[a("p",[s._v("CMake中，C++是默认的编程语言。不过，建议使用"),a("code",[s._v("LANGUAGES")]),s._v("选项在"),a("code",[s._v("project")]),s._v("命令中显式地声明项目的语言")])]),s._v(" "),a("li",[a("p",[s._v("使用"),a("code",[s._v("cmake -help")]),s._v("查看完整的帮助信息")])]),s._v(" "),a("li",[a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mkdir -p sirius_build")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd sirius_build")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cmake ..")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以上构建步骤可用跨平台命令代替")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -H表示当前目录中搜索根CMakeLists.txt文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -Bsirius_build告诉CMake在一个名为sirius_build的目录中生成所有的文件")]),s._v("\ncmake -H. -Bsirius_build\n")])])])])])]),s._v(" "),a("h3",{attrs:{id:"构建和链接静态库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建和链接静态库"}},[s._v("#")]),s._v(" 构建和链接静态库")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cmake_minimum_required")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("VERSION")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello_cmake_world LANGUAGES CXX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建目标——静态库。库的名称和源码文件名相同")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("STATIC")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Message.hpp"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Message.cpp"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_executable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello-cmake "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello_cmake_world.cpp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后需要将目标库链接到可执行目标")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello-cmake message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"构建和链接动态库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建和链接动态库"}},[s._v("#")]),s._v(" 构建和链接动态库")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 与构建静态库一样，只需将STATIC改为SHARED")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("SHARED")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Message.hpp"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Message.cpp"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("如果考虑跨平台，有两种方法：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("可为动态库的头文件添加：")]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("once")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 添加一下内容以实现跨平台 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("_WIN32")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("MessageDLL")])]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("MessageDLL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__declspec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dllexport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("MessageDLL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__declspec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dllimport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("MessageDLL")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//////////END////////////")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageDLL")]),s._v(" Message "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ... DO SOMETING ...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("在"),a("code",[s._v("CMakeLists.txt")]),s._v("里添加"),a("code",[s._v("set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("在 Windows 平台中，导出动态库时除了会生成 "),a("code",[s._v(".dll")]),s._v(" 动态库之外还会生成一个"),a("code",[s._v(".lib")]),s._v("文件。这个"),a("code",[s._v(".lib")]),s._v("文件和静态库的"),a("code",[s._v(".lib")]),s._v("文件不同，它里面不保存代码生成的二进制文件，而是所有需要导出符号的符号表。")]),s._v(" "),a("p",[s._v("如果希望将一个符号（symbol）导出（这里的符号可以指类、函数等各种类型）：")]),s._v(" "),a("p",[s._v("​\t方法一：需要在其前面加上 "),a("code",[s._v("__declspec(dllexport)")]),s._v(" 标志。这样这个符号的相关信息就会存在于"),a("code",[s._v(".lib")]),s._v("中的符号表中；\n​\t方法二：在"),a("code",[s._v("CMakeLists.txt")]),s._v("里添加"),a("code",[s._v("set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)")])])]),s._v(" "),a("h3",{attrs:{id:"条件句控制编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件句控制编译"}},[s._v("#")]),s._v(" 条件句控制编译")]),s._v(" "),a("p",[s._v("先看一个例子：")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cmake_minimum_required")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("VERSION")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello_cmake_world LANGUAGES CXX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 引入变量USE_LIBRARY，message打印相关信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("USE_LIBRARY "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("OFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("STATUS "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Compile sources into a library? '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("USE_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# BUILD_SHARED_LIBS在下面第二点有具体解释")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("BUILD_SHARED_LIBS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("OFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 引入变量包括*.hpp\\*.cpp文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("APPEND _sources "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Message.hpp"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Message.cpp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 逻辑控制编译")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("USE_LIBRARY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),s._v("_sources"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello-cmake "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello_cmake_world.cpp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello-cmake message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello-cmake "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello_cmake_world.cpp"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),s._v("_sources"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ol",[a("li",[s._v("使用"),a("code",[s._v("set")]),s._v("为变量设置值，其中逻辑变量可以是以下几种之一：\n"),a("ul",[a("li",[s._v("逻辑"),a("code",[s._v("true")]),s._v("："),a("code",[s._v("1")]),s._v("、"),a("code",[s._v("ON")]),s._v("、"),a("code",[s._v("YES")]),s._v("、"),a("code",[s._v("true")]),s._v("、"),a("code",[s._v("Y")]),s._v("或"),a("code",[s._v("非零数")]),s._v("；")]),s._v(" "),a("li",[s._v("逻辑"),a("code",[s._v("false")]),s._v("："),a("code",[s._v("0")]),s._v("、"),a("code",[s._v("OFF")]),s._v("、"),a("code",[s._v("NO")]),s._v("、"),a("code",[s._v("false")]),s._v("、"),a("code",[s._v("N")]),s._v("、"),a("code",[s._v("IGNORE")]),s._v("、"),a("code",[s._v("NOTFOUND")]),s._v("、"),a("code",[s._v("空字符串")]),s._v("或以"),a("code",[s._v("-NOTFOUND")]),s._v("为后缀。")])])]),s._v(" "),a("li",[a("code",[s._v("BUILD_SHARED_LIBS")]),s._v("是CMake的一个全局标志，可以决定为生成动态库还是静态库。如果为"),a("code",[s._v("false")]),s._v("或未定义，将生成一个静态库；")]),s._v(" "),a("li",[a("code",[s._v("_sources")]),s._v("变量是一个局部变量，不应该在当前范围之外使用，可以在名称前加下划线。")])]),s._v(" "),a("h3",{attrs:{id:"显示选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示选项"}},[s._v("#")]),s._v(" 显示选项")]),s._v(" "),a("blockquote",[a("p",[s._v("上一节中（条件句控制编译）用硬编码控制逻辑，只能从内部修改。")]),s._v(" "),a("p",[s._v("本节使用"),a("code",[s._v("option()")]),s._v("命令，以选项的形式在外部设置编译逻辑")])]),s._v(" "),a("p",[a("strong",[s._v("语法：")])]),s._v(" "),a("p",[a("code",[s._v("option")]),s._v("可接受三个参数：")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("<option_variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"help string"')]),s._v(" [initial value]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("<option_variable>")]),s._v("变量名")]),s._v(" "),a("li",[a("code",[s._v('"help string"')]),s._v("在终端可见的帮助性文字")]),s._v(" "),a("li",[a("code",[s._v("[initial value]")]),s._v("选项的默认值，可以是"),a("code",[s._v("ON")]),s._v("或"),a("code",[s._v("OFF")]),s._v("。")])]),s._v(" "),a("p",[s._v("因而对于上一节中的"),a("code",[s._v("CMakeLists.txt")]),s._v("，只需将"),a("code",[s._v("set(USE_LIBRARY OFF)")]),s._v("使用"),a("code",[s._v("option()")]),s._v("代替，并设置默认值即可：")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("USE_LIBRARY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Compile sources into a library"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("OFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("现在，可以通过CMake的"),a("code",[s._v("-D")]),s._v("CLI选项，将信息传递给CMake来切换库的行为")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("cmake -D "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("USE_LIBRARY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ON "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n")])])]),a("blockquote",[a("p",[a("code",[s._v("-D")]),s._v("开关用于为CMake设置任何类型的变量：逻辑变量、路径等等。")])]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("如果有依赖关系，如：用户设置不构建库，但设置了构建动态库，此时应该不构建库。CMake提供"),a("code",[s._v("cmake_dependent_option()")]),s._v("命令用来定义依赖于其他选项的选项：")]),s._v(" "),a("blockquote",[a("p",[s._v("需要引入"),a("code",[s._v("CMakeDependentOption")]),s._v("模块")])]),s._v(" "),a("p",[a("strong",[s._v("语法：")])]),s._v(" "),a("p",[a("code",[s._v("cmake_dependent_option")]),s._v("可接受五个参数：")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cmake_dependent_option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("<OPTION_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"help string"')]),s._v(" <default_value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" <depends"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" <force_value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ul",[a("li",[a("p",[a("code",[s._v("<OPTION_NAME>")]),s._v("变量名")])]),s._v(" "),a("li",[a("p",[a("code",[s._v('"help string"')]),s._v("帮助性文字")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("<default_value>")]),s._v("默认值")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("<depends>")]),s._v("该值为"),a("code",[s._v("true")]),s._v("时 "),a("strong",[s._v("开启此选项")]),s._v("并设置为默认值，否则强制该选项默认值为 "),a("strong",[s._v("<force_value>")])]),s._v(" "),a("p",[a("code",[s._v("<depends>")]),s._v("可以用分号代表与的关系，例如：")]),s._v(" "),a("p",[a("code",[s._v('"ENABLE_BUILD;NOT DISABLE_TESTING"')]),s._v("表示（"),a("code",[s._v("ENABLE_BUILD")]),s._v(" && (！"),a("code",[s._v("DISABLE_TESTING")]),s._v(") )")])])]),s._v(" "),a("p",[s._v("因而添加"),a("code",[s._v("是否编译为库")]),s._v("和"),a("code",[s._v("是否编译为动态库")]),s._v("两个选项时，可修改为：")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("USE_LIBRARY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Compile sources into a library"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("OFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CMakeDependentOption"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当USE_LIBRARY为ON时，MAKE_STATIC_LIBRARY是；MAKE_STATIC_LIBRARY是")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当USE_LIBRARY为ON时，MAKE_STATIC_LIBRARY是；MAKE_STATIC_LIBRARY是")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cmake_dependent_option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tMAKE_STATIC_LIBRARY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Compile sources into a static library"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("OFF")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"USE_LIBRARY"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("ON")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cmake_dependent_option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tMAKE_SHARED_LIBRARY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Compile sources into a shared library"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("ON")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"USE_LIBRARY"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("ON")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"设置编译器选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置编译器选项"}},[s._v("#")]),s._v(" 设置编译器选项")]),s._v(" "),a("p",[s._v("参考如下一个例子：")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cmake_minimum_required")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("VERSION")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("recipe-"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("08")]),s._v(" LANGUAGES CXX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C++ compiler flags: '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("CMAKE_CXX_FLAGS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 准备编译选项列表")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("APPEND flags "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-fPIC"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Wall"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("WIN32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("APPEND flags "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Wextra"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Wpedantic"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("geometry\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("STATIC")]),s._v("\n    geometry_circle.cpp\n    geometry_circle.hpp\n    geometry_polygon.cpp\n    geometry_polygon.hpp\n    geometry_rhombus.cpp\n    geometry_rhombus.hpp\n    geometry_square.cpp\n    geometry_square.hpp\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置编译选项")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_compile_options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("geometry\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PRIVATE")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),s._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compute-areas compute-areas.cpp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_compile_options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compute-areas\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PRIVATE")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-fPIC"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compute-areas geometry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ol",[a("li",[s._v("编译选项"),a("code",[s._v("target_compile_options()")]),s._v("可以添加三个级别的可见性："),a("code",[s._v("INTERFACE")]),s._v("、"),a("code",[s._v("PUBLIC")]),s._v("和"),a("code",[s._v("PRIVATE")]),s._v("；\n"),a("ul",[a("li",[a("strong",[s._v("PRIVATE")]),s._v("，编译选项应用于指定的目标，不会传递给与目标相关的目标。")]),s._v(" "),a("li",[a("strong",[s._v("INTERFACE")]),s._v("，给定的编译选项将只应用于指定目标，并传递给与目标相关的目标。")]),s._v(" "),a("li",[a("strong",[s._v("PUBLIC")]),s._v("，编译选项将应用于指定目标和使用它的目标。")])])])]),s._v(" "),a("h3",{attrs:{id:"语言设定标准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语言设定标准"}},[s._v("#")]),s._v(" 语言设定标准")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set_target_properties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("animals\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PROPERTIES")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("CXX_STANDARD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("CXX_EXTENSIONS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("OFF")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("CXX_STANDARD_REQUIRED")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("ON")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("POSITION_INDEPENDENT_CODE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("这里为目标设置了一些属性:")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("CXX_STANDARD")]),s._v("，会设置我们想要的C++标准。")]),s._v(" "),a("li",[a("strong",[s._v("CXX_EXTENSIONS")]),s._v("，告诉CMake，只启用"),a("code",[s._v("ISO C++")]),s._v("标准的编译器标志，而不使用特定编译器的扩展。")]),s._v(" "),a("li",[a("strong",[s._v("CXX_STANDARD_REQUIRED")]),s._v("，指定所选标准的版本。如果这个版本不可用，CMake将停止配置并出现错误。当这个属性被设置为"),a("code",[s._v("OFF")]),s._v("时，CMake将寻找下一个标准的最新版本，直到一个合适的标志。这意味着，首先查找"),a("code",[s._v("C++20")]),s._v("，然后是"),a("code",[s._v("C++17")]),s._v("，然后是"),a("code",[s._v("C++14")]),s._v("。")])]),s._v(" "),a("blockquote",[a("p",[s._v("如果语言标准是所有目标共享的全局属性，那么可以将"),a("code",[s._v("CMAKE_<LANG>_STANDARD")]),s._v("、"),a("code",[s._v("CMAKE_<LANG>_EXTENSIONS")]),s._v("和"),a("code",[s._v("CMAKE_<LANG>_STANDARD_REQUIRED")]),s._v("变量设置为相应的值。所有目标上的对应属性都将使用这些设置。")])]),s._v(" "),a("h3",{attrs:{id:"关于目标的一些选项汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于目标的一些选项汇总"}},[s._v("#")]),s._v(" 关于目标的一些选项汇总")]),s._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myapp "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PUBLIC")]),s._v(" /path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加头文件搜索目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myapp "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PUBLIC")]),s._v(" hellolib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加要链接的库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("target_add_definitions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myapp "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PUBLIC")]),s._v(" MY_MACRO="),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加一个宏定义")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("target_add_definitions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myapp "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PUBLIC")]),s._v(" -DMY_MACRO="),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 与MY_MACRO=1等价")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_compile_options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myapp "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PUBLIC")]),s._v(" -fopenmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加编译器命令行选项")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_sources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myapp "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PUBLIC")]),s._v(" hello.cpp other.cpp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加要编译的源文件")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 以下指令不推荐使用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/path/to/include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("link_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/opt/cuda"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加库的搜索路径")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_definitions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MY_MACRO="),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_compile_options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-fopenmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);