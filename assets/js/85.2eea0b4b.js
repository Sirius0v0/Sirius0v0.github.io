(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{551:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("{% note info %}")]),t._v(" "),a("p",[t._v("本篇非教程篇，是根据笔者自己的学习情况整理出来的小笔记，仅供读者阅读参考哦~")]),t._v(" "),a("p",[t._v("{% endnote %}")]),t._v(" "),a("h1",{attrs:{id:"处理字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理字符串"}},[t._v("#")]),t._v(" 处理字符串")]),t._v(" "),a("h2",{attrs:{id:"字符串的格式化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的格式化"}},[t._v("#")]),t._v(" 字符串的格式化")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("format方法")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{<参数序号> : <格式控制标记>}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("默认参数序号"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#格式控制标记：<所填充的字符> <对齐方式> <宽度> <,> <.精度> <类型> ")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#说明：<对齐>：① < 左对齐 ② > 右对齐 ③ ^ 居中对齐")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\t  <,>：\t数字的千位分隔符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{0:=^20}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'python'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{0:*>20}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'=======python======='")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*****************bit'")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("%方法")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xiaohong\nPIN "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username:%s'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PIN:%d'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"运算与索引提取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算与索引提取"}},[t._v("#")]),t._v(" 运算与索引提取")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I'")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'love'")]),t._v("\nz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'u'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("####\t【运算】")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接'+'")]),t._v("\nsentence "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" z\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sentence"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#'I love u'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#复制'*'")]),t._v("\ncopy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("copy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#'III'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#判断子串'in'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" sentence"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#True")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###\t\t【索引】")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sentence"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# o")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sentence"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lov          【左闭右开】")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sentence"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# u evol I")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sentence"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# evo          【左闭右开】")]),t._v("\n")])])]),a("h2",{attrs:{id:"进制与编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进制与编码"}},[t._v("#")]),t._v(" 进制与编码")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名/操作")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("功能")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("bin(x)或hex(x)或oct(x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2、16、8进制转换(int to str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("hex(1234)  ==>  'ox4d2'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("chr(u)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回u(Unicode)对应的字符")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("chr(176)  ==>  '°'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ord("),a("string",[t._v(")")])],1),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回字符对应的Unicode")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("chr(‘°’)  ==>  176")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.encode('编码')")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("编码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.decode('编码')")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("解码")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),a("h2",{attrs:{id:"与大小写有关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与大小写有关"}},[t._v("#")]),t._v(" 与大小写有关")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名/操作")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("功能")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.upper()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("全部大写")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'ada lovelace'.upper() ==>  'ADA LOVELACE'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.lower()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("全部小写")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'ADa loveLAce'.lower()  ==>  'ada Lovelace'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.title()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("首字母大写")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'ada lovelace'.title()  ==>  'Ada Lovelace'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.capitalize()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("第一个字符转换为大写")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'how are u'.capitalize() ==> 'How are u'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.swapcase()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大小写字母转换")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'LaTex'.swapcase() ==> 'lAtEX'")])])])]),t._v(" "),a("h2",{attrs:{id:"拆分合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拆分合并"}},[t._v("#")]),t._v(" 拆分合并")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名/操作")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("功能")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.join(iter)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在iter每个元素之间添加字符")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("‘=’.join('123')  ==>  '1=2=3'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.strip(chars)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("删除左右chars字符")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'= python='.strip('= np')  ==>  'ytho'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.rstrip()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("删除右边空白")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'  Hello World   '.rstrip()  ==>  '  Hello World'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.lstrip()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("删除左边空白")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'  Hello World   '.lstrip()  ==>  'Hello World   '")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.strip()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("删除左右空白")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'  Hello World   '.strip()  ==>  'Hello World'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.split(sep)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("按照sep进行分割为列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("‘I love u’.split()  ==>  ['I','love','u']")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".center(width[,fillchar])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("居中并填充")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("‘python’.center(10,'=') ==> '==python=='")])])])]),t._v(" "),a("h2",{attrs:{id:"查找、替换字符串内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找、替换字符串内容"}},[t._v("#")]),t._v(" 查找、替换字符串内容")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名/操作")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("功能")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.find('xx'[,start,end])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("查找字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("‘an apple’.find('a')  ==>  0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.rfind()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(从右查找)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'an apple'.rfind('a')  ==>  3")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.lfind()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("（从左查找）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("略")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.index()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("（找不到报错）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("略")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.rindex()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("略")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("略")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.lindex()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("略")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("略")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.replace(old , new)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("替换字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'an apple'.replace('a','e')  ==> 'en epple'")])])])]),t._v(" "),a("h2",{attrs:{id:"与判断相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与判断相关"}},[t._v("#")]),t._v(" 与判断相关")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名/操作")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("功能")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.startswith('str1')")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("判断str是否以str1开头")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'filename.doc'.startswith('File') ==> False")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.endswith('str2')")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("判断str是否以str2结尾")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'filename.doc'.endswith('txt') ==> False")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.isalpha()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("判断是否是字母")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'abcd6'.isalpha() ==> False")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.isdigit()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("判断是否是数字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'2342'.isdigit() ==> True")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.istitle()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("判断是否为标题式字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'Title Good'.istitle() ==> True")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.isupper()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("判断是否都为大写")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'ABCD'.isupper() ==> True")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("len(字符、列表、元组等)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回对象长度")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("len(['23','awf','3fs','sdfsf'])  ==>  4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("str.count(sub)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("统计字符串sub次数")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("‘an apple a day’.count('a')  ==>  4")])])])]),t._v(" "),a("h1",{attrs:{id:"处理列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理列表"}},[t._v("#")]),t._v(" 处理列表")]),t._v(" "),a("h2",{attrs:{id:"添加元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加元素"}},[t._v("#")]),t._v(" 添加元素")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".append('string')")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将元素 ‘string’ 添加到末尾")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".insert(0 , 'string')")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将元素 ‘string’ 添加到索引为 0 的地方")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".extend(建议放含多个元素的列表)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("类似于列表的合并【可以用'+'直接合并列表】")])])])]),t._v(" "),a("h2",{attrs:{id:"删除元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除元素"}},[t._v("#")]),t._v(" 删除元素")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("del list1[1]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("知道元素位置时")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".pop([1])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("提取")]),t._v("一号位的元素，不传入参数时默认最后一个元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".remove('string')")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("已知元素的值 'string' 时")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".clear()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("清除所有元素")])])])]),t._v(" "),a("h2",{attrs:{id:"组织列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组织列表"}},[t._v("#")]),t._v(" 组织列表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".sort([reverse = True])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("永久性")]),t._v("从小到大排序(传入参数从大到小)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("sorted([reverse = True])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("临时性")]),t._v("从小到大排序(传入参数从大到小)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".reverse()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("永久性")]),t._v("反转列表元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("enumerate(sequence[,start=0])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将可遍历的对象组合为一个索引序列，多用于for循环当中")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("zip()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的对象")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("zip(*)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("与 zip 相反，zip(*) 可理解为解压，返回元组类型")])])])]),t._v(" "),a("h2",{attrs:{id:"统计相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统计相关"}},[t._v("#")]),t._v(" 统计相关")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".count(x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("统计列表中x元素的个数")])])])]),t._v(" "),a("h1",{attrs:{id:"组合数据类型的处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合数据类型的处理"}},[t._v("#")]),t._v(" 组合数据类型的处理")]),t._v(" "),a("h2",{attrs:{id:"集合类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合类型"}},[t._v("#")]),t._v(" 集合类型")]),t._v(" "),a("ul",[a("li",[t._v("集合的特点：无序不重复")]),t._v(" "),a("li",[t._v("集合的操作："),a("code",[t._v("并：S|T")]),t._v("or"),a("code",[t._v("S.union(T)")]),t._v("，"),a("code",[t._v("差：S-T")]),t._v("or"),a("code",[t._v("S.difference(T)")]),t._v("，"),a("code",[t._v("交：S&T")]),t._v("or"),a("code",[t._v("S.intersection(T)")]),t._v("，"),a("code",[t._v("补：S^T")]),t._v("，"),a("code",[t._v("判断子集：<=或<")]),t._v("，"),a("code",[t._v("判断包含：>=或>")])]),t._v(" "),a("li",[t._v("增强操作符："),a("code",[t._v("s|=T")]),t._v("等。")])]),t._v(" "),a("h3",{attrs:{id:"声明集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明集合"}},[t._v("#")]),t._v(" 声明集合")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("set1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只能用此方法创建空集合")]),t._v("\nset2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#set2 = {}不是集合而是字典类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n字典：{key:value,key:value,......}\n集合：{元素1,元素2,元素3,......}\n'''")]),t._v("\n")])])]),a("h3",{attrs:{id:"操作集合之增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作集合之增"}},[t._v("#")]),t._v(" 操作集合之增")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s.add(x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("添加一个元素x")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s.update()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("添加多个元素")])])])]),t._v(" "),a("h3",{attrs:{id:"操作集合之删"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作集合之删"}},[t._v("#")]),t._v(" 操作集合之删")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s.remove()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("移除x，若不存在，报错（KeyError）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s.pop()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("随机取出一个元素(一般为第一个)，若S为空产生KeyError异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s.clear")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("清楚所有元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s.discard(x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("类似remove()  移除x，若不存在，不报错")])])])]),t._v(" "),a("h3",{attrs:{id:"操作集合之改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作集合之改"}},[t._v("#")]),t._v(" 操作集合之改")]),t._v(" "),a("h3",{attrs:{id:"处理集合的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理集合的方法"}},[t._v("#")]),t._v(" 处理集合的方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("S.discard(x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("移除x，若不存在，不报错")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("S.clear()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("S.copy()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回一个副本")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("len(S)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回元素个数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("x （not）in S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("判断x是否为S的一个元素")])])])]),t._v(" "),a("h2",{attrs:{id:"序列类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#序列类型"}},[t._v("#")]),t._v(" 序列类型")]),t._v(" "),a("ul",[a("li",[t._v("序列类型可分成：字符串类型，元组类型，列表类型")]),t._v(" "),a("li",[t._v("序列可理解为可储存任何类型数据的列表，故大部分方法可适用于此（判断是否存在，连接，复制，索引，切片等）")])]),t._v(" "),a("h3",{attrs:{id:"补充方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充方法"}},[t._v("#")]),t._v(" 补充方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".index(x[,i,j])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回从位置i到位置j第一次出现x的位置")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s.count(x)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回s序列中出现x的总次数")])])])]),t._v(" "),a("h2",{attrs:{id:"元组类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元组类型"}},[t._v("#")]),t._v(" 元组类型")]),t._v(" "),a("ul",[a("li",[t._v("定义：可使用（）；也可以不使用，用逗号分开，或tuple()")]),t._v(" "),a("li",[t._v("创建后就不可以修改")])]),t._v(" "),a("p",[t._v("内置方法"),a("code",[t._v("tuple.count(x)")]),t._v("和"),a("code",[t._v("tuple.index(x)")]),t._v("自行学习")]),t._v(" "),a("h3",{attrs:{id:"可迭代类型的拆包与装包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可迭代类型的拆包与装包"}},[t._v("#")]),t._v(" 可迭代类型的拆包与装包")]),t._v(" "),a("p",[t._v("当出现以下情况会报错：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("t1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t1\n")])])]),a("p",[t._v("如下处理即可：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("t1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("z "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t1\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#x = 9, y = [4,6], z = 7")]),t._v("\nx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t1\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#x = 9, y = [4,6,7]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t1\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#x = [9,4,6], y = 7")]),t._v("\n")])])]),a("p",[a("code",[t._v("*")]),t._v(" 的使用涉及到拆包与装包")]),t._v(" "),a("blockquote",[a("p",[t._v("给可迭代类型前加上星号（"),a("code",[t._v("*")]),t._v("）可代表将其拆分")]),t._v(" "),a("p",[t._v("将分散的值赋值给"),a("code",[t._v("*变量")]),t._v("可将其装包赋值给变量")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("list_chai")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" list1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" list_chai"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("list1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# *list1 将列表拆开")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])])]),a("h2",{attrs:{id:"字典类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典类型"}},[t._v("#")]),t._v(" 字典类型")]),t._v(" "),a("p",[t._v("定义：{}或dict()创建：{<键1>:<值1> , <键2>:<值2> , ... , <键n>:<值n>}")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("dict1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndict2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndict3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ID'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020202020202'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiaohong'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndict4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lucky'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"增加与更改元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增加与更改元素"}},[t._v("#")]),t._v(" 增加与更改元素")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 格式： dict5[key] = value")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 有key则更改值，无key则增加元素")]),t._v("\ndict5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndict5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'brand'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'huawei'")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#增加")]),t._v("\ndict5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'brand'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mi'")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#更改")]),t._v("\n")])])]),a("h3",{attrs:{id:"字典的查找判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典的查找判断"}},[t._v("#")]),t._v(" 字典的查找判断")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dict1[key] 和 dict1.get(key) 均可以返回key对应的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推荐dict1.get(key) 因为前者找不到key是会报错 后者会返回 None")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in 可用于字典中的判断存在操作 用于判断元素有没有在字典的key中出现")]),t._v("\ndict1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'brand'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'huawei'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiaohong'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'brand'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dict1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("d.items()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将字典转为列表包含元组的形式")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("d.keys()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("查找字典的键，可以用for in 遍历")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("d.values()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("查找字典的值，可以用for in 遍历")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("d.get(k[,default])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回字典中键k对应的值(找不到返回default)")])])])]),t._v(" "),a("h3",{attrs:{id:"字典中的删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典中的删除"}},[t._v("#")]),t._v(" 字典中的删除")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("del dict1[key]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("删除键为key的一对键值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("d.pop(key[,default])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("根据key删除键值对，返回值（若无）为键的值（默认值）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("d.popitem()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("随机删键值对（一般是从末尾删），以元组类型返回被删除的键值对")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("clear()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("同列表中的clear()，清空")])])])]),t._v(" "),a("h3",{attrs:{id:"字典中的其他内置函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典中的其他内置函数"}},[t._v("#")]),t._v(" 字典中的其他内置函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("len(d)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回字典中元素的个数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("d1.update(d2)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将d2更新到d1中（合并：重key则以d2为准）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("dict.fromkeys(seq[,value])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("创建一个新字典，以序列 seq 中元素做字典的键，value 为字典所有键对应的初始值。")])])])]),t._v(" "),a("h1",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("str")]),t._v(" --\x3e  "),a("code",[t._v("int")]),t._v(","),a("code",[t._v("list")]),t._v(","),a("code",[t._v("set")]),t._v(","),a("code",[t._v("tuple")]),t._v(","),a("code",[t._v("float")]),t._v(";")]),t._v(" "),a("li",[a("code",[t._v("所有类型")]),t._v("  --\x3e  "),a("code",[t._v("str")]),t._v(";")]),t._v(" "),a("li",[a("code",[t._v("list")]),t._v("  --\x3e  "),a("code",[t._v("set")]),t._v(","),a("code",[t._v("tuple")]),t._v(","),a("code",[t._v("字典：[(key,value),(key,value),...]")]),t._v(";")]),t._v(" "),a("li",[a("code",[t._v("tuple")]),t._v(","),a("code",[t._v("set")]),t._v(","),a("code",[t._v("dict")]),t._v("  --\x3e  "),a("code",[t._v("list")]),t._v(";(字典转列表仅保存key)")])]),t._v(" "),a("h1",{attrs:{id:"其他函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他函数"}},[t._v("#")]),t._v(" 其他函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("功能")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("eval('string')")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("去掉最外侧引号")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("eval(‘1  +  3’)  ==>  4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("isinstance(变量，类型)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("判断变量是否为某类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),a("h2",{attrs:{id:"操作数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作数字"}},[t._v("#")]),t._v(" 操作数字")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("功能")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("round(x , d)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("对x四舍五入保留d位小数")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("round（0.1+0.2,1） ==  0.3")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("divmod(x , y)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("实现求商与余数")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("divmod(10,3)  ==  (3,1)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("pow(x,y[,z])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("( x ** y ) % z")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("pow(3,pow(3,99),10000)  ==  4587")])])])]),t._v(" "),a("h1",{attrs:{id:"其他杂项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他杂项"}},[t._v("#")]),t._v(" 其他杂项")]),t._v(" "),a("h2",{attrs:{id:"引入和调用库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入和调用库"}},[t._v("#")]),t._v(" 引入和调用库")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" turtle "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" t\nt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#推荐使用")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\nimport turtle\nturtle.setup(500,500)\n\nfrom turtle import *\nsetup(500,500)\n'''")]),t._v("\n")])])]),a("h2",{attrs:{id:"条件结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件结构"}},[t._v("#")]),t._v(" 条件结构")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#二分支的紧凑结构")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("判断"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("判断"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[t._v("#")]),t._v(" 异常处理")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当语句1发生错误的时候执行语句2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("语句"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NameError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#仅名称错误时执行语句2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("语句"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#异常处理的高级情形")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当没有错误，继续执行3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#无论有无错误，继续执行4")]),t._v("\n")])])]),a("h2",{attrs:{id:"循环的拓展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环的拓展"}},[t._v("#")]),t._v(" 循环的拓展")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在for while之后可以加else进行拓展")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当循环中没有被break跳出循环，则执行else")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);