(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{518:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"cpp杂货铺"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpp杂货铺"}},[t._v("#")]),t._v(" Cpp杂货铺")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("头文件"),a("code",[t._v("climits/limits.h")]),t._v("中包含了关于整型限制的信息，下表给出了climits中的一些符号常量：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("符号常量")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("表示")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CHAR_BIT")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("char的位数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CHAR_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("char的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CHAR_MIN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("char的最小值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SCHAR_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("signed char的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SCHAR_MIN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("signed char的最小值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("UCHAR_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("unsigned char的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SHRT_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("short的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SHRT_MIN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("short的最小值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("USHRT_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("unsigned short的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("INT_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("int的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("INT_MIN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("int的最小值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("UINT_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("unsigned int的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("LONG_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("LONG_MIN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long的最小值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ULONG_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("unsigned long的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("LLONG_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long long的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("LLONG_MIN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long long的最小值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ULLONG_MAX")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("unsigned long long的最大值")])])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("cout.put(char)")]),t._v("显示一个字符；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("wchar_t")]),t._v("类型，是一种 "),a("strong",[t._v("整数类型")]),t._v("。"),a("code",[t._v("cin/cout")]),t._v("处理的是char流，不适于用来处理"),a("code",[t._v("wchar_t")]),t._v("类型，"),a("code",[t._v("iostream")]),t._v("头文件提供了"),a("code",[t._v("wcin/wcout")]),t._v("用于处理wchar_t流；另外，加上前缀"),a("code",[t._v("L")]),t._v("来指示宽字符常量和宽字符串。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("wchar_t")]),t._v(" bob "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" L"),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'P'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" L"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tall"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("C++11新增类型："),a("code",[t._v("char16_t")]),t._v("、"),a("code",[t._v("char32_t")]),t._v(";")]),t._v(" "),a("p",[t._v("前者长16位，用u前缀表示字符常量和字符串常量："),a("code",[t._v("u'C'和u\"be good\"")]),t._v("；")]),t._v(" "),a("p",[t._v("后者长32位，用U前缀表示字符常量和字符串常量："),a("code",[t._v("U'R'和U\"dirty rat\"")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("更好的常量定义方法："),a("code",[t._v("const type name = value;")]),t._v("；")]),t._v(" "),a("p",[t._v("其他的常量定义方法："),a("code",[t._v("#define name value")]),t._v("。但const比#define好首先在于他可以指明类型，其次可以使用作用域规则将定义限制在特定的函数或文件中，最后可以将const用于更复杂的类型（数组，结构等）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("cout.setf()")]),t._v("的作用是通过设置格式标志来控制输出形式")]),t._v(" "),a("blockquote",[a("p",[t._v("boolalpha    可以使用单词”true”和”false”进行输入/输出的布尔值.\noct    用八进制格式显示数值.\ndec    用十进制格式显示数值.\nhex    用十六进制格式显示数值.\nleft    输出调整为左对齐.\nright    输出调整为右对齐.\nscientific    用科学记数法显示浮点数.\nfixed    用正常的记数方法显示浮点数(与科学计数法相对应).\nshowbase    输出时显示所有数值的基数.\nshowpoint    显示小数点和额外的零，即使不需要.\nshowpos    在非负数值前面显示”＋（正号）”.\nskipws    当从一个流进行读取时，跳过空白字符(spaces, tabs, newlines).\nunitbuf    在每次插入以后，清空缓冲区.\ninternal    将填充字符回到符号和数值之间.\nuppercase    以大写的形式显示科学记数法中的”e”和十六进制格式的”x”.")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("auto")]),t._v("关键字，自动推断类型，自动但很少用。")])]),t._v(" "),a("li",[a("p",[t._v("有时候字符串很长，可以将两个用引号括起来的字符串合并为一个，即任何两个由空白分隔的 "),a("strong",[t._v("字符串常量")]),t._v(" 都将自动拼接为一个。")])]),t._v(" "),a("li",[a("p",[t._v("面向行的输入："),a("code",[t._v("cin.getline()")]),t._v("和"),a("code",[t._v("cin.get()")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("cin.getline(name,size)")]),t._v("通过换行符确定结尾，不保存换行符。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("cin.get(name,size)")]),t._v("读取到行尾，但是 "),a("strong",[t._v("保留换行符")]),t._v(" ，意味着如下调用会出错（因为第二次调用时看到的是换行符，不能读取任何内容）")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("cin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dessert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a problem")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("cin.get()")]),t._v("不带任何参数读取下一个字符（包括换行符）")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("cin.getline()、cin.get()")]),t._v("返回cin对象，即可以链式调用")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("cin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ArSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("当"),a("code",[t._v("get()")]),t._v("读取空行或者"),a("code",[t._v("getline()")]),t._v("读取的字符串长度比分配的空间长时，会设置失效位，使得后续输入将被阻断，可使用"),a("code",[t._v("cin.clear()")]),t._v("恢复输入；")])]),t._v(" "),a("li",[a("p",[t._v("对于"),a("code",[t._v("string")]),t._v("类型字符串读取行时使用"),a("code",[t._v("getline(cin, name)")]),t._v(".")])])])]),t._v(" "),a("li",[a("p",[t._v("C++11新增原始字符串类型："),a("code",[t._v('R"(raw string)"')]),t._v("，其中"),a("code",[t._v('"(')]),t._v("和"),a("code",[t._v(')"')]),t._v("是原始字符串的默认定界符，自定义定界符可在默认定界符之间添加任意数量的基本字符（ "),a("strong",[t._v("空格、左右括号、斜杠、控制字符")]),t._v(" 除外），例如下述程序中的"),a("code",[t._v('R"=**( )=**"')]),t._v("；除此之外前缀R可与其他字符串前缀结合使用，位置前后没有要求。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<string>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    string str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token raw-string string"}},[t._v('R"(let i = \\n " " )"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token raw-string string"}},[t._v('R"=**(R"(example)")=**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("wchar_t")]),t._v(" str3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" L"),a("span",{pre:!0,attrs:{class:"token raw-string string"}},[t._v('R"(""""")"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char16_t")]),t._v(" str4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" u"),a("span",{pre:!0,attrs:{class:"token raw-string string"}},[t._v('R"(sni"\\n)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("u",[t._v("4.4.6节")]),t._v("不理解；")])]),t._v(" "),a("li",[a("p",[t._v("对于下述代码")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bird "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wren"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v('"wren"实际表示的是字符串地址，此语句是将"wren"的地址赋值给了bird指针，并且，字符串字面值是常量，所以要声明关键字const.')])]),t._v(" "),a("li",[a("p",[t._v("显示字符串数组地址需要将指针类型由"),a("code",[t._v("char *")]),t._v("转换为"),a("code",[t._v("int *")]),t._v(" ；")])]),t._v(" "),a("li",[a("p",[t._v("模板类"),a("code",[t._v("vector")]),t._v("和"),a("code",[t._v("array")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("typeName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n_elem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narray"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("typeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n_elem"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注意的是，vector中的n_elem可以是变量，而array中的n_elem不能是变量；")]),t._v(" "),a("p",[t._v("其次，vector元素个数可变，但是相比数组效率低，array元素个数不可变，效率与数组一样，但比数组更加安全。")])]),t._v(" "),a("li",[a("p",[t._v("基于范围的for循环（C++11）")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" prices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.99")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.99")]),t._v("， "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.87")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" prices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("若要修改数组元素")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" prices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.99")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.99")]),t._v("， "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.87")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" prices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("头文件"),a("code",[t._v("<cctype>")]),t._v("中包含了一些字符检查相关的函数，总结如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("函数名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("功能")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("isalnum()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为字母或数字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("isalpha()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为字母")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("iscntrl()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为控制字符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("isdigit()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为数字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("isgraph()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为除空格之外的打印字符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("islower()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为小写字母")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("isprint()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为打印字符（包括空格）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("ispunct()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为标点符号")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("isspace()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为标准空白字符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("isupper()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为大写字母")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("isxdigit()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为十六进制数字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("tolower()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("返回小写字母")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("toupper()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("返回大写字母")])])])])]),t._v(" "),a("li")])])}),[],!1,null,null,null);e.default=n.exports}}]);